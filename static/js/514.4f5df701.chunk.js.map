{"version":3,"file":"static/js/514.4f5df701.chunk.js","mappings":"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","sources":["admin/AdminInnerPages/UpcomingProjects/PageHeading.jsx","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport {\r\n  getAllSectionFirst,\r\n  updateSectionFirstContent,\r\n} from \"../../AdminServices\";\r\nimport Notification from \"../../../Notification/Notification\";\r\n\r\nfunction PageHeading() {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [editData, setEditData] = useState({\r\n    id: \"\",\r\n    heading: \"\",\r\n    content: \"\",\r\n  });\r\n  const [fieldErrors, setFieldErrors] = useState({ heading: \"\", content: \"\" });\r\n  const [notification, setNotification] = useState({\r\n    open: false,\r\n    message: \"\",\r\n    severity: \"info\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await getAllSectionFirst();\r\n        setData(result);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleClickOpen = (section) => {\r\n    setEditData(section);\r\n    setFieldErrors({ heading: \"\", content: \"\" });\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"heading\" && value.length > 20) {\r\n      setFieldErrors({\r\n        ...fieldErrors,\r\n        heading: \"Maximum 20 characters allowed\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (name === \"content\" && value.length > 100) {\r\n      setFieldErrors({\r\n        ...fieldErrors,\r\n        content: \"Maximum 100 characters allowed\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setEditData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n    setFieldErrors((prevErrors) => ({\r\n      ...prevErrors,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n\r\n  const validateFields = () => {\r\n    const errors = { heading: \"\", content: \"\" };\r\n    let isValid = true;\r\n\r\n    if (!editData.heading) {\r\n      errors.heading = \"This field is required\";\r\n      isValid = false;\r\n    }\r\n    if (!editData.content) {\r\n      errors.content = \"This field is required\";\r\n      isValid = false;\r\n    }\r\n\r\n    setFieldErrors(errors);\r\n    return isValid;\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!validateFields()) return;\r\n\r\n    try {\r\n      const updatedData = {\r\n        id: editData.id,\r\n        content: editData.content,\r\n        heading: editData.heading,\r\n      };\r\n      const response = await updateSectionFirstContent(\r\n        editData.id,\r\n        updatedData\r\n      );\r\n      setData((prevData) =>\r\n        prevData.map((item) =>\r\n          item.id === editData.id\r\n            ? { ...item, content: editData.content, heading: editData.heading }\r\n            : item\r\n        )\r\n      );\r\n\r\n      setNotification({\r\n        open: true,\r\n        message: response.message,\r\n        severity: \"success\",\r\n      });\r\n    } catch (error) {\r\n      setNotification({\r\n        open: true,\r\n        message: `Error updating data: ${error.message}`,\r\n        severity: \"error\",\r\n      });\r\n      setError(error.message);\r\n    } finally {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Typography color=\"error\">Error: {error}</Typography>;\r\n  }\r\n  const truncateText = (text) => {\r\n    const words = text.split(\" \");\r\n    if (words.length > 2) {\r\n      return words.slice(0, 2).join(\" \") + \"...\";\r\n    }\r\n    return text;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        Page Heading\r\n      </Typography>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>S No.</TableCell>\r\n              <TableCell>Heading</TableCell>\r\n              <TableCell>Content</TableCell>\r\n              <TableCell>Edit</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((section) => (\r\n              <TableRow key={section.id}>\r\n                <TableCell>{section.id}</TableCell>\r\n                <TableCell>{section.heading}</TableCell>\r\n                <TableCell>{truncateText(section.content)}</TableCell>\r\n                <TableCell>\r\n                  <Button\r\n                    startIcon={<EditIcon />}\r\n                    onClick={() => handleClickOpen(section)}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Edit Section</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To edit this section, please modify the fields below.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"heading\"\r\n            label=\"Heading\"\r\n            type=\"text\"\r\n            fullWidth\r\n            id=\"outlined-basic\"\r\n            variant=\"outlined\"\r\n            value={editData.heading}\r\n            onChange={handleChange}\r\n            error={Boolean(fieldErrors.heading)}\r\n            helperText={fieldErrors.heading}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"content\"\r\n            label=\"Content\"\r\n            type=\"text\"\r\n            fullWidth\r\n            id=\"outlined-basic\"\r\n            variant=\"outlined\"\r\n            value={editData.content}\r\n            onChange={handleChange}\r\n            error={Boolean(fieldErrors.content)}\r\n            helperText={fieldErrors.content}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleSave}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Notification\r\n        open={notification.open}\r\n        handleClose={() => setNotification({ ...notification, open: false })}\r\n        alertMessage={notification.message}\r\n        alertSeverity={notification.severity}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageHeading;\r\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n      className\n    } = props,\n    ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;"],"names":["data","setData","useState","loading","setLoading","error","setError","open","setOpen","editData","setEditData","id","heading","content","fieldErrors","setFieldErrors","notification","setNotification","message","severity","useEffect","async","result","getAllSectionFirst","fetchData","handleClose","handleChange","e","name","value","target","length","prevData","prevErrors","_jsx","CircularProgress","_jsxs","Typography","color","children","truncateText","text","words","split","slice","join","variant","component","gutterBottom","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","section","Button","startIcon","EditIcon","onClick","handleClickOpen","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","onChange","Boolean","helperText","DialogActions","validateFields","errors","isValid","updatedData","response","updateSectionFirstContent","item","concat","Notification","alertMessage","alertSeverity","getDialogContentTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentTextRoot","styled","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","root","React","inProps","ref","useThemeProps","className","ownerState","_objectWithoutPropertiesLoose","classes","composedClasses","composeClasses","_extends","useUtilityClasses","clsx"],"sourceRoot":""}